// Generated by LiveScript 1.2.0
var x$;
x$ = angular.module('main', []);
x$.controller('main', ['$scope'].concat(function($scope){
  console.log('ok');
  return d3.json('techtree.json', function(data){
    var m, cluster, nodes, links, diag, x$, y$, z$;
    m = 100;
    cluster = d3.layout.cluster().size([1200 - 2 * m, 1200 - 2 * m]);
    nodes = cluster.nodes(data);
    links = cluster.links(nodes);
    console.log(nodes);
    diag = d3.svg.diagonal();
    x$ = d3.select('#svg g').selectAll('path').data(links);
    x$.exit().remove();
    x$.enter().append('path');
    d3.select('#svg g').selectAll('path').attr({
      d: function(it){
        return diag(it);
      },
      stroke: '#999',
      "stroke-width": '3px',
      fill: 'none'
    });
    y$ = d3.select('#svg g').selectAll('rect').data(nodes);
    y$.exit().remove();
    y$.enter().append('rect');
    z$ = d3.select('#svg g').selectAll('rect');
    z$.attr({
      x: function(it){
        return it.x - 40;
      },
      y: function(it){
        return it.y - 40;
      },
      width: 80,
      height: 80,
      fill: function(it){
        return "url(#p" + it.id + ")";
      }
    });
    z$.style({
      cursor: 'pointer'
    });
    z$.on('mouseover', function(d){
      return d3.select(this).transition().duration(500).attr({
        x: function(){
          return d.x - 80;
        },
        y: function(){
          return d.y - 80;
        },
        width: 160,
        height: 160
      });
    });
    z$.on('mouseout', function(d){
      return d3.select(this).transition().duration(500).attr({
        x: function(){
          return d.x - 40;
        },
        y: function(){
          return d.y - 40;
        },
        width: 80,
        height: 80
      });
    });
    return z$;
  });
}));